(module
  (memory (import "js" "mem") 1)
  (global $heap (mut i32) (i32.const 4))

  ;; Take an amount of blocks (4-byte words) to allocate, return an address
  ;; handle suitable for giving to other access methods
  (func (export "alloc") (param $amount i32) (result i32)
    (local $addr i32)
    (local.set $addr (global.get $heap))
    (global.set $heap (i32.add (global.get $heap) (i32.mul (local.get $amount) (i32.const 4))))
    (local.get $addr))

  ;; Given an address handle, return the value at that address
  (func (export "load") (param $addr i32) (param $offset i32) (result i32)
    (i32.load (i32.add (local.get $addr) (i32.mul (local.get $offset) (i32.const 4)))))

  ;; Given an address handle and a new value, update the value at that adress to
  ;; that value
  (func (export "store") (param $addr i32) (param $offset i32) (param $val i32)
    (i32.store (i32.add (local.get $addr) (i32.mul (local.get $offset) (i32.const 4))) (local.get $val)))

  
  (func (export "set$CreateEntry") (param $key i32) (result i32)
        (local $$allocPointer i32)

        (i32.const 2)   ;; size in bytes
        (call $alloc)
        (local.tee $$allocPointer)
        (local.get $key)
        (i32.store)
        (local.get $$allocPointer)
        (i32.const 4)
        (i32.add)
        (i32.const 0)
        (i32.store)
        (local.get $$allocPointer)
    )

    (func (export "set$add") (param $baseAddr i32) (param $key i32) (result i32)
        (local $nodePtr i32)
        (local $tagHitFlag i32)
        (local $$allocPointer i32)
        (i32.const 0)
        (local.set $tagHitFlag)
        (local.get $baseAddr)
        (local.get $key)
        (i32.const 10)
        (i32.rem_u)
        (i32.mul (i32.const 4))
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.eq)
        (if
            (then
                (local.get $key)
                (call $set$CreateEntry)
                (local.set $$allocPointer)
                (local.get $baseAddr)
                (local.get $key)
                (i32.const 10)
                (i32.rem_u)
                (i32.mul (i32.const 4))
                (i32.add)
                (local.get $$allocPointer)
                (i32.store)
            )
            (else
                (local.get $baseAddr)
                (local.get $key)
                (i32.const 10)
                (i32.rem_u)
                (i32.mul (i32.const 4))
                (i32.add)
                (i32.load)
                (i32.load)
                (local.get $key)
                (i32.eq)
                (if
                    (then
                    (i32.const 1)
                    (local.set $tagHitFlag)
                    )
                )
                (local.get $baseAddr)
                (local.get $key)
                (i32.const 10)
                (i32.rem_u)
                (i32.mul (i32.const 4))
                (i32.add)
                (i32.load)
                (i32.const 4)
                (i32.add)
                (local.set $nodePtr)
                (block
                    (loop
                        (local.get $nodePtr)
                        (i32.load)
                        (i32.const 0)
                        (i32.ne)
                        (if
                            (then
                            (local.get $nodePtr)
                            (i32.load)
                            (i32.load)
                            (local.get $key)
                            (i32.eq)
                            (if
                                (then
                                (i32.const 1)
                                (local.set $tagHitFlag)
                                )
                            )
                            (local.get $nodePtr)
                            (i32.load)
                            (i32.const 4)
                            (i32.add)
                            (local.set $nodePtr)
                            )
                        )
                        (br_if 0
                            (local.get $nodePtr)
                            (i32.load)
                            (i32.const 0)
                            (i32.ne)
                        )
                        (br 1)
                    )
                )
                (local.get $tagHitFlag)
                (i32.const 0)
                (i32.eq)
                (if
                    (then
                        (local.get $key)
                        (call $set$CreateEntry)
                        (local.set $$allocPointer)
                        (local.get $nodePtr)
                        (local.get $$allocPointer)
                        (i32.store)
                    )
                )
            )
        )
        (i32.const 0)
    )

    (func (export "set$contains") (param $baseAddr i32) (param $key i32) (result i32)
        (local $nodePtr i32)
        (local $tagHitFlag i32)
        (local $$allocPointer i32)
        (i32.const 0)
        (local.set $tagHitFlag)
        (local.get $baseAddr)
        (local.get $key)
        (i32.const 10)
        (i32.rem_u)
        (i32.mul (i32.const 4))
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.eq)
        (if
            (then
            )
            (else
                (local.get $baseAddr)
                (local.get $key)
                (i32.const 10)
                (i32.rem_u)
                (i32.mul (i32.const 4))
                (i32.add)
                (i32.load)
                (i32.load)
                (local.get $key)
                (i32.eq)
                (if
                    (then
                        (i32.const 1)
                        (local.set $tagHitFlag)
                    )
                )
                (local.get $baseAddr)
                (local.get $key)
                (i32.const 10)
                (i32.rem_u)
                (i32.mul (i32.const 4))
                (i32.add)
                (i32.load)
                (i32.const 4)
                (i32.add)
                (local.set $nodePtr)
                (block
                    (loop
                        (local.get $nodePtr)
                        (i32.load)
                        (i32.const 0)
                        (i32.ne)
                        (if
                            (then
                                (local.get $nodePtr)
                                (i32.load)
                                (i32.load)
                                (local.get $key)
                                (i32.eq)
                                (if
                                    (then
                                        (i32.const 1)
                                        (local.set $tagHitFlag)
                                    )
                                )
                                (local.get $nodePtr)
                                (i32.load)
                                (i32.const 4)
                                (i32.add)
                                (local.set $nodePtr)
                            )
                        )
                        (br_if 0
                            (local.get $nodePtr)
                            (i32.load)
                            (i32.const 0)
                            (i32.ne)
                        )
                        (br 1)
                    )
                )
            )
        )
        (local.get $tagHitFlag)
    )

    (func (export "set$length") (param $baseAddr i32) (result i32)
        (local $length i32)
        (local $nodePtr i32)
        (local $i i32)
        (loop $my_loop
            (local.get $baseAddr)
            (local.get $i)
            (i32.mul (i32.const 4))
            (i32.add)
            (i32.load)
            (i32.const 0)
            (i32.eq)
            (if
                (then
                )
                (else
                    (i32.const 1)
                    (local.get $length)
                    (i32.add)
                    (local.set $length)
                    (local.get $baseAddr)
                    (local.get $i)
                    (i32.mul (i32.const 4))
                    (i32.add)
                    (i32.load)
                    (i32.const 4)
                    (i32.add)
                    (local.set $nodePtr)
                    (block
                        (loop
                            (local.get $nodePtr)
                            (i32.load)
                            (i32.const 0)
                            (i32.ne)
                            (if
                                (then
                                    (local.get $length)
                                    (i32.const 1)
                                    (i32.add)
                                    (local.set $length)
                                    (local.get $nodePtr)
                                    (i32.load)
                                    (i32.const 4)
                                    (i32.add)
                                    (local.set $nodePtr)
                                )
                            )
                            (br_if 0
                                (local.get $nodePtr)
                                (i32.load)
                                (i32.const 0)
                                (i32.ne)
                            )
                            (br 1)
                        )
                    )
                )
            )
            (local.get $i)
            (i32.const 1)
            (i32.add)
            (local.set $i)
            (local.get $i)
            (i32.const 10)
            (i32.lt_s)
            (br_if $my_loop)
        )
        (local.get $length)
    )

    (func (export "set$remove") (param $baseAddr i32) (param $key i32) (result i32)
        (local $prevPtr i32)
        (local $currPtr i32)
        (local.get $baseAddr)
        (local.get $key)
        (i32.const 10)
        (i32.rem_u)
        (i32.mul (i32.const 4))
        (i32.add)
        (local.set $prevPtr)
        (local.get $prevPtr)
        (i32.load)
        (i32.const 0)
        (i32.eq)
        (if
            (then
            )
            (else
                (local.get $prevPtr)
                (i32.load)
                (local.set $currPtr)
                (block
                    (loop
                        (local.get $currPtr)
                        (i32.load)
                        (local.get $key)
                        (i32.eq)
                        (if
                            (then
                                (local.get $prevPtr)
                                (local.get $currPtr)
                                (i32.const 4)
                                (i32.add)
                                (i32.load)
                                (i32.store)
                                (local.get $currPtr)
                                (i32.const 4)
                                (i32.add)
                                (local.set $prevPtr)
                                (local.get $currPtr)
                                (i32.const 4)
                                (i32.add)
                                (i32.load)
                                (local.set $currPtr)
                            )
                        )
                        (br_if 0
                            (local.get $currPtr)
                            (i32.const 0)
                            (i32.ne)
                        )
                        (br 1)
                    )
                )
            )
        )
        (i32.const 0)
    )

    (func $alloc (param $amount i32) (result i32)
    (local $addr i32)
    (local.set $addr (global.get $heap))
    (global.set $heap (i32.add (global.get $heap) (i32.mul (local.get $amount) (i32.const 4))))
    (local.get $addr))

    (func $set$CreateEntry (param $key i32) (result i32)
        (local $$allocPointer i32)

        (i32.const 2)   ;; size in bytes
        (call $alloc)
        (local.tee $$allocPointer)
        (local.get $key)
        (i32.store)
        (local.get $$allocPointer)
        (i32.const 4)
        (i32.add)
        (i32.const 0)
        (i32.store)
        (local.get $$allocPointer))

)